import { GithubUserResponse } from './GithubUserResponse';


// Interface representando a resposta da API GitHub para um repositório
interface GithubRepoResponse {
  id: number;
  node_id: string;
  name: string;
  full_name: string;
  private: boolean;
  owner: Omit<GithubUserResponse, 'company' | 'blog' | 'location' | 'email' | 'hireable' | 'bio' | 'twitter_username' | 'public_repos' | 'public_gists' | 'followers' | 'following' | 'created_at' | 'updated_at'>;
  html_url: string;
  description: string;
  fork: boolean;
  url: string;
  forks_url: string;
  keys_url: string;
  collaborators_url: string;
  teams_url: string;
  hooks_url: string;
  issue_events_url: string;
  assignees_url: string;
  branches_url: string;
  tags_url: string;
  blobs_url: string;
  git_tags_url: string;
  git_refs_url: string;
  trees_url: string;
  statuses_url: string;
  languages_url: string;
  stargazers_url: string;
  contributors_url: string;
  subscribers_url: string;
  subscription_url: string;
  commits_url: string;
  git_commits_url: string;
  comments_url: string;
  issue_comment_url: string;
  contents_url: string;
  compare_url: string;
  merges_url: string;
  archive_url: string;
  downloads_url: string;
  issues_url: string;
  pulls_url: string;
  milestones_url: string;
  notifications_url: string;
  labels_url: string;
  releases_url: string;
  deployments_url: string;
  created_at: string;
  updated_at: string;
  pushed_at: string;
  git_url: string;
  ssh_url: string;
  clone_url: string;
  svn_url: string;
  homepage: string;
  size: number;
  stargazers_count: number;
  watchers_count: number;
  language: string;
  has_issues: boolean;
  has_projects: boolean;
  has_downloads: boolean;
  has_wiki: boolean;
  has_pages: boolean;
  forks_count: number;
  mirror_url: string;
  archived: boolean;
  disabled: boolean;
  open_issues_count: number;
  license: string;
  allow_forking: boolean;
  is_template: boolean;
  topics: string[];
  visibility: string;
  forks: number;
  open_issues: number;
  watchers: number;
  default_branch: string;
}

// Define um tipo que exclui a propriedade 'owner' da interface GithubRepoResponse
type RepositoryOnly = Omit<GithubRepoResponse, 'owner'>;

// Define um tipo para o repositório do GitHub com propriedades específicas
type LocalGithubRepository = Pick<GithubRepoResponse, 'name' | 'description' | 'fork' | 'stargazers_count'>;

// Inicializa a variável repo com um objeto que siga a estrutura de GithubRepoResponse
let repo: GithubRepoResponse = {
  id: 1,
  node_id: 'node_id',
  name: 'repo_name',
  full_name: 'full_name',
  private: false,
  owner: {
    login: 'login',
    id: 1,
    node_id: 'node_id',
    avatar_url: 'avatar_url',
    gravatar_id: '',
    url: 'url',
    html_url: 'html_url',
    followers_url: 'followers_url',
    following_url: 'following_url',
    gists_url: 'gists_url',
    starred_url: 'starred_url',
    subscriptions_url: 'subscriptions_url',
    organizations_url: 'organizations_url',
    repos_url: 'repos_url',
    events_url: 'events_url',
    received_events_url: 'received_events_url',
    type: 'type',
    site_admin: false,
    name: 'Gabriel',
  },
  html_url: 'html_url',
  description: 'description',
  fork: false,
  url: 'url',
  forks_url: 'forks_url',
  keys_url: 'keys_url',
  collaborators_url: 'collaborators_url',
  teams_url: 'teams_url',
  hooks_url: 'hooks_url',
  issue_events_url: 'issue_events_url',
  assignees_url: 'assignees_url',
  branches_url: 'branches_url',
  tags_url: 'tags_url',
  blobs_url: 'blobs_url',
  git_tags_url: 'git_tags_url',
  git_refs_url: 'git_refs_url',
  trees_url: 'trees_url',
  statuses_url: 'statuses_url',
  languages_url: 'languages_url',
  stargazers_url: 'stargazers_url',
  contributors_url: 'contributors_url',
  subscribers_url: 'subscribers_url',
  subscription_url: 'subscription_url',
  commits_url: 'commits_url',
  git_commits_url: 'git_commits_url',
  comments_url: 'comments_url',
  issue_comment_url: 'issue_comment_url',
  contents_url: 'contents_url',
  compare_url: 'compare_url',
  merges_url: 'merges_url',
  archive_url: 'archive_url',
  downloads_url: 'downloads_url',
  issues_url: 'issues_url',
  pulls_url: 'pulls_url',
  milestones_url: 'milestones_url',
  notifications_url: 'notifications_url',
  labels_url: 'labels_url',
  releases_url: 'releases_url',
  deployments_url: 'deployments_url',
  created_at: 'created_at',
  updated_at: 'updated_at',
  pushed_at: 'pushed_at',
  git_url: 'git_url',
  ssh_url: 'ssh_url',
  clone_url: 'clone_url',
  svn_url: 'svn_url',
  homepage: 'homepage',
  size: 0,
  stargazers_count: 0,
  watchers_count: 0,
  language: 'language',
  has_issues: false,
  has_projects: false,
  has_downloads: false,
  has_wiki: false,
  has_pages: false,
  forks_count: 0,
  mirror_url: 'mirror_url',
  archived: false,
  disabled: false,
  open_issues_count: 0,
  license: 'license',
  allow_forking: false,
  is_template: false,
  topics: [],
  visibility: 'visibility',
  forks: 0,
  open_issues: 0,
  watchers: 0,
  default_branch: 'default_branch',
};

// Corrige a inicialização de repository para corresponder ao tipo RepositoryOnly
let repository: RepositoryOnly = {
  id: 1,
  node_id: 'node_id',
  name: 'repo_name',
  full_name: 'full_name',
  private: false,
  html_url: 'html_url',
  description: 'description',
  fork: false,
  url: 'url',
  forks_url: 'forks_url',
  keys_url: 'keys_url',
  collaborators_url: 'collaborators_url',
  teams_url: 'teams_url',
  hooks_url: 'hooks_url',
  issue_events_url: 'issue_events_url',
  assignees_url: 'assignees_url',
  branches_url: 'branches_url',
  tags_url: 'tags_url',
  blobs_url: 'blobs_url',
  git_tags_url: 'git_tags_url',
  git_refs_url: 'git_refs_url',
  trees_url: 'trees_url',
  statuses_url: 'statuses_url',
  languages_url: 'languages_url',
  stargazers_url: 'stargazers_url',
  contributors_url: 'contributors_url',
  subscribers_url: 'subscribers_url',
  subscription_url: 'subscription_url',
  commits_url: 'commits_url',
  git_commits_url: 'git_commits_url',
  comments_url: 'comments_url',
  issue_comment_url: 'issue_comment_url',
  contents_url: 'contents_url',
  compare_url: 'compare_url',
  merges_url: 'merges_url',
  archive_url: 'archive_url',
  downloads_url: 'downloads_url',
  issues_url: 'issues_url',
  pulls_url: 'pulls_url',
  milestones_url: 'milestones_url',
  notifications_url: 'notifications_url',
  labels_url: 'labels_url',
  releases_url: 'releases_url',
  deployments_url: 'deployments_url',
  created_at: 'created_at',
  updated_at: 'updated_at',
  pushed_at: 'pushed_at',
  git_url: 'git_url',
  ssh_url: 'ssh_url',
  clone_url: 'clone_url',
  svn_url: 'svn_url',
  homepage: 'homepage',
  size: 0,
  stargazers_count: 0,
  watchers_count: 0,
  language: 'language',
  has_issues: false,
  has_projects: false,
  has_downloads: false,
  has_wiki: false,
  has_pages: false,
  forks_count: 0,
  mirror_url: 'mirror_url',
  archived: false,
  disabled: false,
  open_issues_count: 0,
  license: 'license',
  allow_forking: false,
  is_template: false,
  topics: [],
  visibility: 'visibility',
  forks: 0,
  open_issues: 0,
  watchers: 0,
  default_branch: 'default_branch',
};
